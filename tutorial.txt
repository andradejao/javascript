Aula 1 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Na linguagem JS o ; (ponto e vírgula) é opcional.
Pode-se utilizar "" ou '' só não pode combiná-los.
Dica: "" para textos e '' para importações.

Nas estruturas de controle condicional e nos laços de repetições pode-se omitir as chaves, porém só uma linha de código será vinculada.

Variáveis na linguagem JS são dinamicamente tipadas e somente 3 tipos: (string, number e boolean) 
Para declarar uma constante ou variável podemos usar: const, var, let
var É OBSOLETO (!NÃO UTILIZAR!)

Sintaxe JS:
    console.log // printar no terminal
    console.clear() // limpar o terminal

Strings:
    .replace (",",".") // substitui um caractere por outro

Concatenação // unir texto com conteúdo de variáveis:
    + // Evitar o uso devido a tipagem dinâmica
    `${}` // Mais usado na linguagem JS

Numbers:
Number // converte para o tipo numérico
Number.isInteger // Verifica se o número é inteiro
.toFixed(x) // Formatar número de acordo com a quantidade de casas decimais

Booleans:
Só admitem dois valores // true e false

Aula 2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Operadores Aritméticos
ATENÇÃO à regra de precedência:
1º) Parênteses
2º) Multiplicação
3º) Divisão
4º) Soma
5º) Subtração

Comparadores:
Observação importante:
NÃO usar os comparadores == != (riscos devido a tipagem dinâmica)

---------------------------
NPM (Node Package Manager)
Gerenciador de pacotes node (pacotes com funcionalidade que podem ser adicionadas ao node)
Para gerenciar (versão, atualizações, etc.) os pacotes node, é necessário configurar o package.json

json(JavaScript Object Notation)
npm -versiom
npm ls // listar pacotes instalados
npm i // instalar um pacote
npm r // remover um pacotes

Observação: os pacotes são instalados no projeto(raíz)

Passo 1 - Criar o arquivo package.json
npm init

Repositório de Pacotes: https://www.npmjs.com/

-----------------
Exercício:
Criar no console JS um app para calcular a porcentagem, usando regra de 3, conforme modelo:
10% de 200 = 20
x       Y    valor

Variáveis: 3 variáveis = x y valor
Entrada: x , y
Processamento: valor = (x * y) / 100
Saída: valor
-----------------
Funções:
Função é um bloco de código reutilizável
Função Simples:

function nome() {
    
}

Aula 3 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Função é um bloco de código reutilizável

Função Simples:
function nome() {
}

Função com Retorno:
function nome() {
    return
}

Função Anônima:
const nome = function() {

}

let nome = function() {
    
}

Funções em JavaScript moderno podem ser simplificadas

___________________________________________________________
obs:
typeof // Verifica a tipagem dinâmica
primitivos (string, number, boolean)
function
object

Aula 4 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

POO - Programação Orientada a Objetos

Pilares:
- Abstração
- Herança
- Polimorfismo
- Encapsulamento

ATENÇÃO!
Toda classe modelo inicia com letra maiúscula

IMPORTANTE!!!
new  // indica a criação de um objeto
this  // quando se refere a ele mesmo
super // indica o uso de atributos da classe pai

polimorfismo // é a mudança de comportamento de um método já existente
*** ATENÇÃO! o Polimorfismo não cria outro método, apenas modifica o comportamento do método existente.
Obrigatório usar o mesmo nome de método da classe pai ***